name: Build, Push, and Deploy

on:
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Get release tag
        id: get_tag
        run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

      - name: Update package.json version
        run: |
          tag=${{ steps.get_tag.outputs.tag }}
          jq --arg new_version "$tag" '.version = $new_version' application/package.json > tmp.$$.json && mv tmp.$$.json application/package.json
        shell: bash

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m "Update package.json version to ${{ steps.get_tag.outputs.tag }}"
          git push

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version from package.json
        id: get_version
        run: echo "VERSION=$(jq -r '.version' < application/package.json)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./application
          push: true
          tags: mohamadkamal/ci-for-git-ops-pipeline:${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Update Kustomize image
        run: |
          cd kustomizations
          echo 'Updating container image tag in dev overlay...'
          CONTAINER_IMAGE_TAG="$(node -e "console.log(require('../application/package.json').version);")" yq eval -i '.images[0].newTag = env(CONTAINER_IMAGE_TAG)' ./overlays/dev/kustomization.yaml
          echo 'Container image tag updated in kustomize overlay for dev...'
          echo 'Creating new deployment manifest file...'
          kustomize build overlays/dev > ../k8s-manifests/deployment.yaml
          echo 'Updated the deployment manifest file being watched by GitOps tool...'
          cd ..
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add .
          git commit -m "Update image to your-repo/your-app:latest"
          git push
